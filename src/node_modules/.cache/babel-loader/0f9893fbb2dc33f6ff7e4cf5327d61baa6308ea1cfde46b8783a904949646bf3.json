{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aksha\\\\Desktop\\\\react\\\\todo-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport './App.css'; // Ensure this line is present\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to hold the list of todos\n  const [todos, setTodos] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  // Function to handle the addition of a new todo\n  const addTodo = () => {\n    if (inputValue.trim()) {\n      // Add a new todo with a unique ID and completion status\n      setTodos([...todos, {\n        id: Date.now(),\n        text: inputValue,\n        completed: false\n      }]);\n      setInputValue(''); // clear input field after adding\n    }\n  };\n\n  // Function to remove a todo by its ID\n  const removeTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  // Function to toggle the 'completed' status of a todo\n  const toggleTodo = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        placeholder: \"Add a new todo...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTodo,\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          textDecoration: todo.completed ? 'line-through' : 'none'\n        },\n        children: [todo.text, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleTodo(todo.id),\n          children: todo.completed ? 'Undo' : 'Complete'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeTodo(todo.id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+Sy7uGGPQnt+jjrIizbpp5oDotQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","todos","setTodos","inputValue","setInputValue","addTodo","trim","id","Date","now","text","completed","removeTodo","filter","todo","toggleTodo","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","style","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/Aksha/Desktop/react/todo-app/src/App.js"],"sourcesContent":["// src/App.js\nimport './App.css'; // Ensure this line is present\nimport React, { useState } from 'react';\n\nfunction App() {\n  // State to hold the list of todos\n  const [todos, setTodos] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  // Function to handle the addition of a new todo\n  const addTodo = () => {\n    if (inputValue.trim()) {\n      // Add a new todo with a unique ID and completion status\n      setTodos([...todos, { id: Date.now(), text: inputValue, completed: false }]);\n      setInputValue(''); // clear input field after adding\n    }\n  };\n\n  // Function to remove a todo by its ID\n  const removeTodo = (id) => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  // Function to toggle the 'completed' status of a todo\n  const toggleTodo = (id) => {\n    setTodos(todos.map(todo =>\n      todo.id === id ? { ...todo, completed: !todo.completed } : todo\n    ));\n  };\n\n  return (\n    <div className=\"todo-app\">\n      <h1>Todo List</h1>\n      <div className=\"todo-input\">\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n          placeholder=\"Add a new todo...\"\n        />\n        <button onClick={addTodo}>Add Todo</button>\n      </div>\n      <ul className=\"todo-list\">\n        {todos.map(todo => (\n          <li key={todo.id} style={{ textDecoration: todo.completed ? 'line-through' : 'none' }}>\n            {todo.text}\n            <button onClick={() => toggleTodo(todo.id)}>{todo.completed ? 'Undo' : 'Complete'}</button>\n            <button onClick={() => removeTodo(todo.id)}>Remove</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}